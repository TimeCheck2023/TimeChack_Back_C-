<?xml version="1.0"?>
<doc>
    <assembly>
        <name>APIEvent</name>
    </assembly>
    <members>
        <member name="M:APIEvent.Controllers.AttendanceController.InsertAttendance(APIEvent.Models.Attendance)">
            <summary>
            Endpoint para insertar una asistencia.
            </summary>
            <param name="attendance">Objeto Attendance con los datos de la asistencia.</param>
            <returns>
            Retorna un objeto IActionResult que indica el resultado de la operación.
            Si la asistencia se inserta correctamente, devuelve un objeto StatusCode con el estado 200 y un mensaje de éxito.
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.AttendanceController.CheckAttendance(System.Int32,System.String)">
            <summary>
            Endpoint para consultar si un usuario tiene una asistencia en un evento específico.
            </summary>
            <param name="idEvento">ID del evento.</param>
            <param name="correo">Correo del usuario.</param>
            <returns>
            Retorna un objeto IActionResult que indica el resultado de la operación.
            Si se encuentra la asistencia, devuelve un objeto StatusCode con el estado 200 y un objeto anónimo con las propiedades "exists" (indicando si existe o no la asistencia) y "tipoAsistencia" (tipo de asistencia).
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.AttendanceController.CancelAttendance(System.String,System.Int32)">
            <summary>
            Endpoint para cancelar una asistencia.
            </summary>
            <param name="correoUsuario">Correo del usuario.</param>
            <param name="idEvento">ID del evento.</param>
            <returns>
            Retorna un objeto IActionResult que indica el resultado de la operación.
            Si se cancela la asistencia correctamente, devuelve un objeto StatusCode con el estado 200 y un mensaje de éxito.
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.AttendanceController.ConfirmAttendance(System.String)">
            <summary>
            Endpoint para confirmar una asistencia.
            </summary>
            <param name="nroDocumentoUsuario">Número de documento del usuario.</param>
            <returns>
            Retorna un objeto IActionResult que indica el resultado de la operación.
            Si se confirma la asistencia correctamente, devuelve un objeto StatusCode con el estado 200 y un mensaje de éxito.
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.EventController.Lista">
            <summary>
            Lista los eventos
            </summary>
            <returns>Devuelve una lista de eventos</returns>
        </member>
        <member name="M:APIEvent.Controllers.EventController.Obtener(System.Int32)">
            <summary>
            Obtiene un evento por su ID
            </summary>
            <param name="IdEvento">ID del evento</param>
            <returns>Devuelve un evento</returns>
        </member>
        <member name="M:APIEvent.Controllers.EventController.GuardarEvento(System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Guarda un nuevo evento en la DB
            </summary>
            <param name="nombreEvento">Nombre del evento</param>
            <param name="descripcion">Descripción del evento</param>
            <param name="imagen">Url de la imagen del evento desde Cloudinary</param>
            <param name="fecha_inicio">Fecha de inicio del evento</param>
            <param name="fecha_final">Fecha del final del evento</param>
            <param name="lugar">Lugar del evento</param>
            <param name="aforo">Capcacidad de personas para el evento</param>
            <param name="id_suborganizacion">ID de la suborganización que creó el evento</param>
            <param name="id_tipo_evento">ID del tipo de evento o categoria</param>
            <returns>
            Retorna un objeto de tipo IActionResult que indica el resultado de la operación.
            Si el evento se guarda correctamente, devuelve un objeto Ok() con el estado 200.
            Si hay errores en los parámetros proporcionados, devuelve un objeto BadRequest con el estado 400 y un mensaje de error.
            Si hay un error interno en el servidor, devuelve un objeto BadRequest con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.EventController.ActualizarEvento(System.Int32,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.Int32,System.Int32)">
            <summary>
            Actualiza los campos de un evento por su ID
            </summary>
            <param name="IdEvento"></param>
            <param name="nombreEvento">Nombre del evento</param>
            <param name="descripcion">Descripción del evento</param>
            <param name="imagen">Url de la imagen del evento desde Cloudinary</param>
            <param name="fecha_inicio">Fecha de inicio del evento</param>
            <param name="fecha_final">Fecha del final del evento</param>
            <param name="lugar">Lugar del evento</param>
            <param name="aforo">Capcacidad de personas para el evento</param>
            <param name="id_tipo_evento">ID del tipo de evento o categoria</param>
            <returns>
            Retorna un objeto de tipo IActionResult que indica el resultado de la operación.
            Si el evento se actualiza correctamente, devuelve un objeto StatusCode con el estado 200 y un mensaje de éxito.
            Si hay errores en los parámetros proporcionados, devuelve un objeto BadRequest con el estado 400 y un mensaje de error.
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.EventController.EliminarEvento(System.Int32)">
            <summary>
            Elimina un evento por su ID
            </summary>
            <param name="idEvento">ID dek evebti</param>
            <returns>
            Retorna un objeto de tipo IActionResult que indica el resultado de la operación.
            Si el evento se elimina correctamente, devuelve un objeto StatusCode con el estado 200 y un mensaje de éxito.
            Si la URL de la imagen es inválida, devuelve un objeto BadRequest con el estado 400 y un mensaje de error.
            Si hay un error al eliminar la imagen de Cloudinary, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.EventController.GetEventsType">
            <summary>
            Obtiene todos los tipos de eventos
            </summary>
            <returns>
            Retorna un objeto de tipo IActionResult que indica el resultado de la operación.
            Si se obtienen los tipos de eventos correctamente, devuelve un objeto StatusCode con el estado 200 y una lista de objetos Event.
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
        <member name="M:APIEvent.Controllers.UserController.List">
            <summary>
            Obtiene una lista de suborganizaciones.
            </summary>
            <returns>
            Retorna un objeto IActionResult que indica el resultado de la operación.
            Si se encuentran suborganizaciones, devuelve un objeto StatusCode con el estado 200 y una lista de objetos User con los datos de las suborganizaciones.
            Si no se encuentran suborganizaciones, devuelve un objeto StatusCode con el estado 200 y una lista vacía.
            Si hay un error interno en el servidor, devuelve un objeto StatusCode con el estado 500 y un mensaje de error.
            </returns>
        </member>
    </members>
</doc>
